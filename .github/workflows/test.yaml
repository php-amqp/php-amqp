name: Test

on:
  push:
  pull_request:
    types: [ opened, synchronize, reopened ]

env:
  TEST_TIMEOUT: 120
  CFLAGS: -D_FORTIFY_SOURCE=2 -fstack-protector-strong -Wall -Werror
  PHP_AMQP_SSL_HOST: rabbitmq.example.org
  MAKEFLAGS: -j4

jobs:
  dedup:
    name: Prevent duplicate builds
    continue-on-error: true
    runs-on: ubuntu-22.04
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5.3.0
        with:
          skip_after_successful_duplicate: 'true'
          cancel_others: 'true'
          concurrent_skipping: 'same_content_newer'

  checkstyle:
    name: Check C formatting
    runs-on: ubuntu-22.04
    needs: dedup
    if: needs.dedup.outputs.should_skip != 'true'

    steps:
      - name: Install clang-format
        uses: myci-actions/add-deb-repo@11
        with:
          repo: "deb https://apt.llvm.org/jammy/ llvm-toolchain-jammy-17 main"
          repo-name: llvm
          keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key
          install: clang-format-17

      - name: Checkout
        uses: actions/checkout@v3.5.3

      - name: Check style
        run: ./infra/tools/pamqp-format-check

  stubs:
    name: Check stubs php-${{ matrix.php-version }}
    runs-on: ubuntu-22.04
    needs: dedup
    if: needs.dedup.outputs.should_skip != 'true'

    strategy:
      fail-fast: false
      matrix:
        php-version: [ "8.2", "8.1", "8.0", "7.4" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3

      - name: Install packages
        run: sudo apt-get install -y cmake valgrind

      - name: Setup PHP
        uses: shivammathur/setup-php@2.25.5
        with:
          php-version: ${{ matrix.php-version }}
          extensions: json
          coverage: none

      - name: Check stubs
        run: ./infra/tools/pamqp-stubs-lint

      - name: Build librabbitmq
        run: ./infra/tools/pamqp-install-librabbitmq master

      - name: Build PHP extension
        run: phpize && ./configure && make

      - name: Validate stubs
        run: ./infra/tools/pamqp-stubs-validate

      - name: Check stub coding style
        run: ./infra/tools/pamqp-stubs-format-check

      - name: Validate argument parsing
        run: ./infra/tools/pamqp-php-cli-deterministic -d extension=modules/amqp.so ./infra/tools/pamqp-arguments-validate
        if: matrix.php-version == '8.2'

  test:
    name: ${{ matrix.test-php-args == '-m' && 'Memtest' || 'Test' }} php-${{ matrix.php-version }}${{ matrix.php-thread-safe && '-ts' || '-nts' }} librabbitmq-${{ matrix.librabbitmq-version }} ${{ matrix.compiler }}
    # librabbitmq < 0.11 needs older OpenSSL version
    runs-on: ${{ (matrix.librabbitmq-version == '0.10.0' || matrix.librabbitmq-version == '0.9.0' || matrix.librabbitmq-version == '0.8.0') && 'ubuntu-20.04' || 'ubuntu-22.04' }}
    needs: dedup
    if: needs.dedup.outputs.should_skip != 'true'

    env:
      TEST_PHP_ARGS: -j4 ${{ matrix.test-php-args }}
      CC: ${{ matrix.compiler }}

    strategy:
      fail-fast: false
      matrix:
        php-version: [ '8.2', '8.1', '8.0', '7.4' ]
        php-thread-safe: [ true, false ]
        librabbitmq-version: [ 'master', '0.13.0', '0.12.0', '0.11.0', '0.10.0', '0.9.0', '0.8.0' ]
        compiler: [gcc, clang]
        include:
          - php-version: '8.2'
            php-thread-safe: false
            librabbitmq-version: 'master'
            test-php-args: '-m'

          - php-version: '8.1'
            php-thread-safe: true
            librabbitmq-version: 'master'
            test-php-args: '-m'

    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3

      - name: Configure hostnames
        run: sudo echo "127.0.0.1 ${{ env.PHP_AMQP_SSL_HOST }}" | sudo tee -a /etc/hosts

      - name: Generate test certificates
        run: docker compose up ca

      - name: Start RabbitMQ
        run: docker compose up -d rabbitmq

      - name: Install packages
        run: sudo apt-get install -y cmake valgrind ${{ matrix.compiler }}

      - name: Setup PHP
        uses: shivammathur/setup-php@2.25.5
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none
          extensions: simplexml
        env:
          phpts: ${{ matrix.php-thread-safe && 'ts' || 'nts' }}

      - name: Build librabbitmq
        run: ./infra/tools/pamqp-install-librabbitmq ${{ matrix.librabbitmq-version }}

      - name: Print librabbitmq version
        run: pkg-config librabbitmq --debug

      - name: Build PHP extension
        run: phpize && ./configure && make

      - name: Test PHP extension
        run: make test | tee result.txt

      - name: Dump RabbitMQ logs
        run: docker compose logs

      - name: Benchmark PHP extension
        run: ./infra/tools/pamqp-php-cli-deterministic -d extension=modules/amqp.so benchmark.php

      - name: Dump report
        run: ./infra/tools/pamqp-test-report
