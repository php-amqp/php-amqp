name: Test

on:
    push:
    pull_request:
        types: [opened, synchronize, edited, reopened]

env:
    ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    TEST_TIMEOUT: 120
    CFLAGS: -D_FORTIFY_SOURCE=2 -fstack-protector-strong -Wall -Werror

jobs:
    checkstyle:
        name: Check coding style
        runs-on: ubuntu-22.04
        steps:
          - name: install clang-format
            uses: myci-actions/add-deb-repo@11
            with:
                repo: "deb https://apt.llvm.org/jammy/ llvm-toolchain-jammy-17 main"
                repo-name: llvm
                keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key
                install: clang-format-17

          - name: Checkout
            uses: actions/checkout@v3.5.3

          - name: Check style
            run: clang-format-17 --dry-run --Werror  *.c *.h

    stubs:
        name: Check stubs php-${{ matrix.php-version }}
        runs-on: ubuntu-22.04

        strategy:
            fail-fast: false
            matrix:
              php-version: ["8.2", "8.1", "8.0", "7.4"]

        steps:
          - name: Checkout
            uses: actions/checkout@v3.5.3

          - name: Install packages
            run: sudo apt-get install -y cmake valgrind

          - name: Setup PHP
            uses: shivammathur/setup-php@2.25.4
            with:
              php-version: ${{ matrix.php-version }}
              extensions: json
              coverage: none

          - name: Check stubs
            run: ./tools/check-stubs.sh

          - name: Build librabbitmq
            run: sudo ./provision/install_rabbitmq-c.sh master

          - name: Build PHP extension
            run: phpize && ./configure && make

          - name: Validate stubs
            run: ./tools/validate-stubs.sh

    test:
        name: Test php-${{ matrix.php-version }}{{ matrix.php-thread-safe && ' thread safe' || '' }} librabbitmq-${{ matrix.librabbitmq-version }} ${{ matrix.test-php-args == '-m' && 'memory leaks' || '' }}
        # librabbitmq < 0.11 needs older OpenSSL version
        runs-on: ${{ matrix.librabbitmq-version == 'v0.10.0' && 'ubuntu-20.04' || 'ubuntu-22.04' }}

        env:
            TEST_PHP_ARGS: ${{ matrix.test-php-args }}

        strategy:
            fail-fast: false
            matrix:
                php-version: ['8.2', '8.1', '8.0', '7.4']
                php-thread-safe: [true, false]
                librabbitmq-version: ['master', 'v0.13.0', 'v0.11.0', 'v0.10.0']
                include:
                    - php-version: '8.2'
                      php-thread-safe: false
                      librabbitmq-version: 'master'
                      test-php-args: '-m'

                    - php-version: '8.1'
                      php-thread-safe: true
                      librabbitmq-version: 'master'
                      test-php-args: '-m'
        services:
            rabbitmq:
                image: rabbitmq:3
                ports:
                    - 5671:5671
                    - 5672:5672
                    - 15671:15671
                    - 15672:15672

        steps:
            - name: Checkout
              uses: actions/checkout@v3.5.3

            - name: Install packages
              run: sudo apt-get install -y cmake valgrind

            - name: Setup PHP
              uses: shivammathur/setup-php@2.25.4
              with:
                  php-version: ${{ matrix.php-version }}
                  coverage: none
              env:
                phpts: ${{ matrix.php-thread-safe && 'ts' || 'nts' }}

            - name: Build librabbitmq
              run: sudo ./provision/install_rabbitmq-c.sh ${{ matrix.librabbitmq-version }}

            - name: Debug librabbitmq
              run: pkg-config librabbitmq --debug

            - name: Build PHP extension
              run: phpize && ./configure && make

            - name: Test PHP extension
              run: make test | tee result.txt

            - name: Benchmark PHP extension
              run: php -n -c './tmp-php.ini' -d "extension_dir=./modules/" -d "extension=amqp.so" benchmark.php

            - name: Dump report
              run: sh test-report.sh
